import time
import smbus

# Địa chỉ I2C của ADS1115
ADS_ADDR = 0x48
bus = smbus.SMBus(1)

# Cấu hình đơn giản cho kênh A0, PGA ±4.096V, single-shot
ADS1115_REG_CONVERSION = 0x00
ADS1115_REG_CONFIG = 0x01
CONFIG_A0 = 0xC183  # OS=1, MUX=100 (AIN0-GND), PGA=±4.096V, MODE=single-shot

# Các thông số của cảm biến ACS712
ACS712_SENSITIVITY = 0.185  # (V/A) cho ACS712-5A (0.100 cho 20A, 0.066 cho 30A)
VCC = 3.3  # hoặc 5.0 tùy theo bạn cấp nguồn gì
ACS712_ZERO_VOLTAGE = VCC / 2  # Ở dòng 0A, điện áp đầu ra nằm ở giữa VCC

def read_adc_voltage():
    try:
        config_hi = (CONFIG_A0 >> 8) & 0xFF
        config_lo = CONFIG_A0 & 0xFF
        bus.write_i2c_block_data(ADS_ADDR, ADS1115_REG_CONFIG, [config_hi, config_lo])
        time.sleep(0.01)
        data = bus.read_i2c_block_data(ADS_ADDR, ADS1115_REG_CONVERSION, 2)
        raw = (data[0] << 8) | data[1]

        if raw > 32767:
            raw -= 65536

        voltage = raw * 4.096 / 32768.0  # Full scale ±4.096V
        return round(voltage, 4)
    except Exception as e:
        print("❌ Error reading ADS1115:", e)
        return None

def calculate_current(voltage):
    # Dòng điện tính bằng độ lệch so với điện áp zero (trung điểm), chia cho độ nhạy
    delta_v = voltage - ACS712_ZERO_VOLTAGE
    current = delta_v / ACS712_SENSITIVITY
    return round(current, 3)

# Đọc liên tục
if __name__ == "__main__":
    while True:
        voltage = read_adc_voltage()
        if voltage is not None:
            current = calculate_current(voltage)
            print(f"🔌 Voltage: {voltage} V | ⚡ Current: {current} A")
        else:
            print("⚠️ Không đọc được dữ liệu ADC.")
        time.sleep(1)
